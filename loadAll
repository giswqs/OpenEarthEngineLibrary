var libs={FeatureCollection: {fromList: require('users/OEEL/lib:/FeatureCollection/fromList')}, Filter: {asymmetricMaxDifference: require('users/OEEL/lib:/Filter/asymmetricMaxDifference')}, data: {deleteImageCollection: require('users/OEEL/lib:/data/deleteImageCollection')}, Feature: {asLabel: require('users/OEEL/lib:/Feature/asLabel')}, Export: {loadIfExistElseExport: require('users/OEEL/lib:/Export/loadIfExistElseExport'), Image: {toDrive: require('users/OEEL/lib:/Export/Image/toDrive'), toAsset: require('users/OEEL/lib:/Export/Image/toAsset')}, ImageCollection: {asImageToAsset: require('users/OEEL/lib:/Export/ImageCollection/asImageToAsset'), toDrive: require('users/OEEL/lib:/Export/ImageCollection/toDrive'), toAsset: require('users/OEEL/lib:/Export/ImageCollection/toAsset'), create: require('users/OEEL/lib:/Export/ImageCollection/create')}}, Element: {addTimeProperties: require('users/OEEL/lib:/Element/addTimeProperties')}, Geometry: {fromText: require('users/OEEL/lib:/Geometry/fromText')}, Image: {semivariogram: require('users/OEEL/lib:/Image/semivariogram'), kriging: require('users/OEEL/lib:/Image/kriging'), inverseDistanceInterpolation: require('users/OEEL/lib:/Image/inverseDistanceInterpolation')}, ImageCollection: {fromSingleImage: require('users/OEEL/lib:/ImageCollection/fromSingleImage'), enhancingCollection: require('users/OEEL/lib:/ImageCollection/enhancingCollection'), movingWindow: require('users/OEEL/lib:/ImageCollection/movingWindow'), SavatskyGolayFilter: require('users/OEEL/lib:/ImageCollection/SavatskyGolayFilter'), OtsuThreshold: require('users/OEEL/lib:/ImageCollection/OtsuThreshold')}, Algorithms: {Sentinel2: {cloudfree: require('users/OEEL/lib:/Algorithms/Sentinel2/cloudfree')}, MODIS: {terrainShadow: require('users/OEEL/lib:/Algorithms/MODIS/terrainShadow')}, Sentinel1: {removeS1BlackBorders: require('users/OEEL/lib:/Algorithms/Sentinel1/removeS1BlackBorders')}}, internal: require('users/OEEL/lib:/internal')}

//generated automatically the 2022-05-02 22:47:39.859269UTC 

exports=libs.internal.setupLibrary(libs);